{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Post","props","className","s","item","src","message","likesCount","MyPosts","React","memo","postsElements","posts","reverse","map","p","postBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.027644f9.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__2o3rC\",\"posts\":\"MyPosts_posts__Gg4ao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__2fmPD\",\"item\":\"Post_item__2-Dr5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__36Jn9\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://trikky.ru/wp-content/blogs.dir/1/files/2020/05/01/s1200-5-2.jpg'/>\r\n            { props.message }\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s.postBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea}\r\n                validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm ({form: \"ProfileAddNewPostForm\"}) (AddNewPostForm);\r\n\r\nexport default MyPosts;","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange =(e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n        <div>\r\n          <span onDoubleClick={ activateEditMode}>{props.status || \"-----\"}</span>\r\n        </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n          <input   onChange={onStatusChange}\r\n                   autoFocus={true}\r\n                   onBlur={deactivateEditMode}\r\n                   value= {status}/>\r\n        </div>\r\n            }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch (addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n           <MyPostsContainer  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n        let  userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n       this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n    return (\r\n        <Profile  {...this.props}\r\n                  profile = {this.props.profile}\r\n                  status={this.props.status}\r\n                  updateStatus={this.props.updateStatus}/>\r\n    )\r\n}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n        //withAuthRedirect\r\n) (ProfileContainer);\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}